# This is a basic workflow to help you get started with Actions

name: CI-PR

# Controls when the action will run.
on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install
        run: |
          npm install

      - name: Build
        run: |
          npm run build

      - name: Test
        run: |
          npm test

      - name: Check vars
        run: |
          echo "GITHUB_REF: $GITHUB_REF"

      # If this runs in the to-account then:
      #   1. PR deployment should target the test account
      #   2. The testing (the deployment prior to prod for validation)
      #      should run in a new STAGING env
      # Or maybe test deployment should only happen in the PR author's dev
      # account, for all to see, and deployment shouldn't even happen on PR.
      # PR review can involve reviewing the author's work in their dev account.
      # By the way, what happens on push to a PR branch? What gets triggered?
      - name: Identify dev AWS account
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.DEV_AWS_DEFAULT_REGION }}
        run: |
          aws sts get-caller-identity

      # - name: Bootsrap dev
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.DEV_AWS_DEFAULT_REGION }}
      #   run: |
      #     npx cdk bootstrap

      # - name: Deploy to dev
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ${{ secrets.DEV_AWS_DEFAULT_REGION }}
      #   run: |
      #     npx cdk deploy --require-approval never
